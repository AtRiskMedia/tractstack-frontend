---
import Layout from "@layouts/Layout.astro";
import { getAllContextPanes } from "../../api/drupal";
import type { Pane } from "../../types";

export async function getStaticPaths() {
  const contextPanes: Pane[] = await getAllContextPanes();
  const pathsPromises: Promise<{
    params: { slug: string };
    props: any;
  }>[] = contextPanes.map(async (pane: Pane) => {
    return {
      params: { slug: pane.field_slug },
      props: {
        title: pane.title,
        id: pane.id,
        slug: pane.field_slug,
      },
    };
  });
  return Promise.all(pathsPromises);
}
const { title, id, slug, drupalNid }: any = Astro.props;

export const prerender = true;
---

<h1>{title}</h1>
<h2>Context Panes</h2>
<p><strong>slug:</strong> {slug}</p>
<p><strong>id:</strong> {id}</p>
<ul>
  <astro-pane key={`pane-${id}`}>
    <li
      id={`pane-${id}`}
      class="pane"
      hx-get={`/partials/pane/${id}`}
      hx-trigger="load"
      hx-swap="innerHTML"
    >
    </li>
  </astro-pane>
</ul>

<astro-link data-id={`welcome`}>
  <a href="/welcome">welcome</a>
</astro-link>
<astro-link data-id={`get`}>
  <a href="/get">get</a>
</astro-link>
<astro-link data-id={`agency`}>
  <a href="/agency">agency</a>
</astro-link>
<astro-link data-id={`#`}>
  <a href="#">#</a>
</astro-link>

<script>
  import { inView } from "../../utils/inView";
  import { eventStream } from "../../utils/eventStream";
  import { events, locked } from "../../store/events";
  import { eventProcessQueue } from "../../utils/eventProcessQueue";

  class Link extends HTMLElement {
    constructor() {
      super();
      const id = this.dataset.id;
      const a = this.querySelector("a");
      if (a)
        a.addEventListener("click", async () => {
          console.log(`process events before loading`, id);
          locked.set(true);
          eventProcessQueue();
        });
    }
  }
  customElements.define("astro-link", Link);

  class Pane extends HTMLElement {
    constructor() {
      super();
      this.querySelector("li");
    }
  }
  customElements.define("astro-pane", Pane);

  const urlSearchParams = new URLSearchParams(window.location.search);
  const params = Object.fromEntries(urlSearchParams.entries());
  const utmSource = params[`utm_source`] || undefined;
  const utmMedium = params[`utm_medium`] || undefined;
  const utmCampaign = params[`utm_campaign`] || undefined;
  const utmTerm = params[`utm_term`] || undefined;
  const utmContent = params[`utm_content`] || undefined;
  const internal =
    document.referrer.indexOf(location.protocol + "//" + location.host) === 0;

  if (utmSource)
    console.log(
      `params: source=${utmSource} medium=${utmMedium} campaign=${utmCampaign} term=${utmTerm} content=${utmContent}`
    );
  if (!internal) {
    console.log(`entered from external link`, document.referrer, 1);
    const event = {
      id: `?`,
      parentId: `?`,
      type: `StoryFragment`,
      verb: `ENTERED`,
    };
    events.set([...events.get(), event]);
  }

  eventStream();
  inView();
</script>
