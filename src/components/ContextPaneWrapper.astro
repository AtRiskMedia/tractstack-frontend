---
import Pane from "@components/Pane";
import type { Current, ContentMap, PaneDatumProps } from "../types";

export interface Props {
  pane: PaneDatumProps;
  contentMap: ContentMap[];
  current: Current;
}
const { pane, contentMap, current } = Astro.props;
---

<astro-context-pane-wrapper
  data-id={JSON.stringify(current)}
  data-map={JSON.stringify(contentMap)}
>
  <div class="py-16">
    <div id={`pane-${pane.id}`} class="pane" data-hidden="false">
      <Pane client:load payload={pane} />
    </div>
    <div class="text-center py-4">
      <button
        id="close-main"
        class="rounded-md bg-myorange/10 hover:bg-black hover:text-white px-3.5 py-1.5 text-black shadow-sm"
      >
        Close
      </button>
    </div>
  </div>
</astro-context-pane-wrapper>

<script>
  import { storySteps, current, contentMap } from "../store/events";

  class ContextPaneWrap extends HTMLElement {
    constructor() {
      super();
      const id = this.dataset.id;
      const thisId = id ? JSON.parse(id) : null;
      const lastStep = storySteps.get()?.at(-1);
      console.log(`lastStep`, lastStep);
      if (thisId) {
        current.set(thisId);
        const storyStep = {
          id: thisId.id,
          slug: thisId.slug,
          title: thisId.title,
          type: `ContextPane`,
        };
        storySteps.set([...storySteps.get(), storyStep]);
      }
      const contentMapPayload = this.dataset.map;
      if (contentMapPayload) contentMap.set(JSON.parse(contentMapPayload));

      const closeButton = this.querySelector(`button#close-main`);
      if (closeButton)
        closeButton.addEventListener("click", () => {
          const goto =
            lastStep &&
            typeof lastStep.slug === `string` &&
            lastStep.slug.length
              ? lastStep.slug
              : ``;
          window.location.href = `/${goto}`;
        });
    }
  }
  customElements.define("astro-context-pane-wrapper", ContextPaneWrap);
</script>
